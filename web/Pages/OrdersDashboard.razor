@page "/orders"
@using System.Net.Http.Json
@using web.Models
@inject HttpClient Http

<div class="orders-dashboard-background">
    <div class="container-fluid py-4">
        <div class="d-flex align-items-center justify-content-between mb-4">
            <div>
                <h1 class="h3 mb-1 text-dark fw-bold">Minhas Encomendas</h1>
                <p class="text-muted mb-0">Acompanhe o estado das suas encomendas</p>
            </div>
            @if (orders?.Any() == true)
            {
                <div class="badge bg-light text-dark fs-6 px-3 py-2">
                    @orders.Count @(orders.Count == 1 ? "encomenda" : "encomendas")
                </div>
            }
        </div>

        @if (orders == null)
        {
            <div class="d-flex justify-content-center align-items-center py-5">
                <div class="text-center">
                    <div class="spinner-border text-primary mb-3" role="status" style="width: 3rem; height: 3rem;">
                        <span class="visually-hidden">Carregando encomendas...</span>
                    </div>
                    <p class="text-muted">Carregando as suas encomendas...</p>
                </div>
            </div>
        }
        else if (!orders.Any())
        {
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <div class="alert alert-light border-0 text-center py-5">
                        <div class="mb-3">
                            <i class="bi bi-bag-x fs-1 text-muted"></i>
                        </div>
                        <h5 class="mb-2">Nenhuma encomenda encontrada</h5>
                        <p class="text-muted mb-0">Ainda não realizou nenhuma encomenda ou não há encomendas associadas ao seu perfil.</p>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row g-4">
                @foreach (var order in orders)
                {
                    <div class="col-12 col-lg-6 col-xl-4">
                        <div class="card order-card h-100 border-0 shadow-sm" @onclick="() => OpenOrderDetails(order)" style="cursor: pointer;">
                            <div class="card-header bg-white border-bottom-0 py-3">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <div class="text-muted small mb-1">Data da encomenda</div>
                                        <div class="fw-semibold">@order.DataEncomenda.ToString("dd/MM/yyyy")</div>
                                    </div>
                                    <span class="badge @GetStatusBadgeClass(order.EstadoNome)">@order.EstadoNome</span>
                                </div>
                            </div>
                            
                            <div class="card-body py-3">
                                <div class="mb-3">
                                    <h6 class="card-subtitle text-muted mb-2">Itens da encomenda</h6>
                                    <div class="table-responsive">
                                        <table class="table table-sm mb-0">
                                            <thead>
                                                <tr class="border-bottom">
                                                    <th class="border-0 fw-medium text-muted small">Produto</th>
                                                    <th class="border-0 fw-medium text-muted small text-center">Qtd</th>
                                                    <th class="border-0 fw-medium text-muted small text-end">Preço</th>
                                                    <th class="border-0 fw-medium text-muted small text-end">Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in order.ItensEncomenda)
                                                {
                                                    <tr>
                                                        <td class="border-0 py-2">
                                                            <div class="fw-medium">@item.Produto</div>
                                                        </td>
                                                        <td class="border-0 py-2 text-center">
                                                            <span class="badge bg-light text-dark">@item.Quantidade</span>
                                                        </td>
                                                        <td class="border-0 py-2 text-end text-muted">@item.PrecoUnitario.ToString("C")</td>
                                                        <td class="border-0 py-2 text-end fw-medium">@item.Total.ToString("C")</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="card-footer bg-light border-top-0 py-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-muted">Valor Total</span>
                                    <span class="h6 mb-0 text-success fw-bold">@order.ValorTotal.ToString("C")</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<!-- Order Details Modal -->
@if (selectedOrder != null)
{
    <div class="modal fade show order-modal" style="display: block;" tabindex="-1" @onclick="CloseOrderDetails">
        <div class="modal-dialog modal-lg modal-dialog-centered" @onclick:stopPropagation="true">
            <div class="modal-content order-modal-content">
                <div class="modal-header border-0 pb-0">
                    <div class="w-100">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div>
                                <h4 class="modal-title fw-bold text-dark mb-1">Detalhes da Encomenda</h4>
                                <p class="text-muted mb-0">Encomenda realizada em @selectedOrder.DataEncomenda.ToString("dd/MM/yyyy 'às' HH:mm")</p>
                            </div>
                        </div>
                        <div class="d-flex align-items-center gap-3">
                            <span class="badge @GetStatusBadgeClass(selectedOrder.EstadoNome) fs-6">@selectedOrder.EstadoNome</span>
                            <div class="text-muted small">
                                <i class="bi bi-calendar3 me-1"></i>
                                @selectedOrder.DataEncomenda.ToString("dd/MM/yyyy")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="modal-body pt-3">
                    <!-- Order Summary -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="info-card">
                                <h6 class="fw-semibold text-muted mb-2">
                                    <i class="bi bi-bag me-2"></i>Resumo da Encomenda
                                </h6>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Total de itens:</span>
                                    <span class="fw-medium">@selectedOrder.ItensEncomenda.Sum(x => x.Quantidade)</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span>Valor total:</span>
                                    <span class="fw-bold text-success fs-5">@selectedOrder.ValorTotal.ToString("C")</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="info-card">
                                <h6 class="fw-semibold text-muted mb-2">
                                    <i class="bi bi-truck me-2"></i>Estado da Encomenda
                                </h6>
                                <div class="d-flex align-items-center">
                                    <div class="status-indicator @GetStatusIndicatorClass(selectedOrder.EstadoNome)"></div>
                                    <span class="fw-medium">@selectedOrder.EstadoNome</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div class="mb-4">
                        <h6 class="fw-semibold text-muted mb-3">
                            <i class="bi bi-list-ul me-2"></i>Itens da Encomenda
                        </h6>
                        <div class="table-responsive">
                            <table class="table table-borderless order-items-table">
                                <thead>
                                    <tr class="table-light">
                                        <th class="fw-semibold">Produto</th>
                                        <th class="fw-semibold text-center">Quantidade</th>
                                        <th class="fw-semibold text-end">Preço Unitário</th>
                                        <th class="fw-semibold text-end">Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in selectedOrder.ItensEncomenda)
                                    {
                                        <tr class="order-item-row">
                                            <td>
                                                <div class="fw-medium">@item.Produto</div>
                                            </td>
                                            <td class="text-center">
                                                <span class="quantity-badge">@item.Quantidade</span>
                                            </td>
                                            <td class="text-end text-muted">@item.PrecoUnitario.ToString("C")</td>
                                            <td class="text-end fw-medium">@item.Total.ToString("C")</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr class="table-light border-top">
                                        <td colspan="3" class="fw-semibold text-end">Total Geral:</td>
                                        <td class="text-end fw-bold text-success fs-5">@selectedOrder.ValorTotal.ToString("C")</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
                
                <div class="modal-footer border-0 pt-0">
                    <button type="button" class="btn btn-danger" @onclick="CloseOrderDetails">
                        <i class="bi bi-x-lg me-2"></i>Fechar
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private List<OrderDto> orders;
    private OrderDto selectedOrder;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Substitui pela tua rota real de API
            orders = await Http.GetFromJsonAsync<List<OrderDto>>("encomendas-clientes/2/encomendas");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Erro ao carregar encomendas: {ex}");
            orders = new List<OrderDto>();
        }
    }

    private void OpenOrderDetails(OrderDto order)
    {
        selectedOrder = order;
        StateHasChanged();
    }

    private void CloseOrderDetails()
    {
        selectedOrder = null;
        StateHasChanged();
    }

    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "pendente" or "em processamento" or "aguardando" => "order-status-badge-pending",
            "concluída" or "concluida" or "finalizada" or "entregue" => "order-status-badge-completed",
            "cancelada" or "cancelado" => "order-status-badge-cancelled",
            _ => "order-status-badge-default"
        };
    }

    private string GetStatusIndicatorClass(string status)
    {
        return status?.ToLower() switch
        {
            "pendente" or "em processamento" or "aguardando" => "status-pending",
            "concluída" or "concluida" or "finalizada" or "entregue" => "status-completed",
            "cancelada" or "cancelado" => "status-cancelled",
            _ => "status-default"
        };
    }
}
