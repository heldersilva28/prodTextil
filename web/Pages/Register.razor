@page "/"
@layout AuthLayout
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms

<div class="login-root">


  <!-- Formulário de registo (usa mesmas classes do login) -->
  <EditForm Model="@registerModel" OnValidSubmit="HandleRegister" class="login-form">
    <DataAnnotationsValidator />

    <div>
      <label>Nome:</label>
      <InputText @bind-Value="registerModel.FullName" class="login-field"/>
      <ValidationMessage For="@(() => registerModel.FullName)" class="error-label" />
    </div>
    <div>
      <label>Email:</label>
      <InputText @bind-Value="registerModel.Email" class="login-field" />
        <ValidationMessage For="@(() => registerModel.Email)" class="error-label" />
    </div>
    <div>
      <label>Password:</label>
      <InputText @bind-Value="registerModel.Password" type="password" class="login-field" />
        <ValidationMessage For="@(() => registerModel.Password)" class="error-label" />
    </div>
    <div>
      <label>Confirmar Password:</label>
      <InputText @bind-Value="registerModel.ConfirmPassword" type="password" class="login-field" />
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" class="error-label" />
    </div>

    <button type="submit" class="login-button">Registar</button>
    <div class="error-label">@errorMessage</div>

    <p class="forgot-link">
      Já tens conta? <a href="/login">Fazer login</a>
    </p>
  </EditForm>
    <!-- Lado da imagem/texto, idêntico ao login -->
    <div class="image-pane">
      <div class="overlay-text">
        <div class="welcome-text">Bem-vindo!</div>
        <div class="subtitle-text">Cria a tua conta</div>
      </div>
    </div>
</div>

@code {
  private RegisterModel registerModel = new();
  private string errorMessage;

  private async Task HandleRegister()
  {
    try
    {
      // Exemplo de chamada à tua API Spring Boot
      var response = await Http.PostAsJsonAsync("api/auth/register", registerModel);
      if (response.IsSuccessStatusCode)
      {
        Navigation.NavigateTo("/login");
      }
      else
      {
        errorMessage = "Não foi possível registar. Verifica os dados.";
      }
    }
    catch
    {
      errorMessage = "Erro de ligação ao servidor.";
    }
  }

  [Inject] HttpClient Http { get; set; }
  [Inject] NavigationManager Navigation { get; set; }

  public class RegisterModel
  {
    [Required(ErrorMessage = "O nome é obrigatório")]
    public string FullName { get; set; }

    [Required, EmailAddress(ErrorMessage = "Email inválido")]
    public string Email { get; set; }

    [Required]
    public string Password { get; set; }

    [Compare(nameof(Password), ErrorMessage = "As passwords não coincidem")]
    public string ConfirmPassword { get; set; }
  }
}
